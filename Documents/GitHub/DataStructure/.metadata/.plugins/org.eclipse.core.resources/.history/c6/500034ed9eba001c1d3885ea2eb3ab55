package sparseArray;

public class SparseArray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 创建一个原始的二维数组 11*11
		// 0： 表示没有棋子， 1: 表示黑子  2: 表示蓝子
		int[][] chaseArray = new int[11][11];
		chaseArray[1][2] = 1;
		chaseArray[2][3] = 2;
		// 输出原始的二维数组
		System.out.println("原始二维数组：");
		for(int[] row : chaseArray) {
			for(int data : row) {
				System.out.printf("%d\t",data);
			}
			System.out.println("\n");
		}
		
		// 将二维数组转化为稀疏数组
		// 1. 首先需要知道二维数组中，有多少个不一样的数据
		int sum = 0;
		for(int i = 0; i < 11; i++) {
			for(int j = 0; j < 11; j++) {
				if(chaseArray[i][j] != 0) {
					sum++;
				}
			}
		}
		// 2. 创建稀疏数组
		int[][] sparseArray = new int[sum+1][3];
		sparseArray[0][0] = 11;
		sparseArray[0][1] = 11;
		sparseArray[0][2] = sum;
	    // 遍历二维数组中的非0的数据
		int count = 0;
		for (int i = 0; i < 11; i++) {
			for (int j = 0; j < 11; j++) {
				if(chaseArray[i][j] != 0) {
					count++;
					sparseArray[count][0] = i;
					sparseArray[count][1] = j;
					sparseArray[count][2] = chaseArray[i][j];
				}
			}
		}
		System.out.println("稀疏数组为：");
		for (int i = 0; i < sparseArray.length; i++) {
			System.out.printf("%d\t%d\t%d\t\n",sparseArray[i][0],sparseArray[i][1],sparseArray[i][2]);
		}
		
		

	}

}
